// Code generated by "stringer -linecomment -type ItemCode -output item_code_string.go"; DO NOT EDIT.

package itemdata

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ItemCodeNotFound-0]
	_ = x[AlphaHelm-1]
	_ = x[AncientArmor-2]
	_ = x[Antlers-3]
	_ = x[ArchonPlate-4]
	_ = x[Armet-5]
	_ = x[AssaultHelmet-6]
	_ = x[AvengerGuard-7]
	_ = x[BalrogSkin-8]
	_ = x[Basinet-9]
	_ = x[BattleBelt-10]
	_ = x[BattleBoots-11]
	_ = x[BattleGauntlets-12]
	_ = x[Belt-13]
	_ = x[BloodSpirit-14]
	_ = x[BoneHelm-15]
	_ = x[BoneVisage-16]
	_ = x[Boneweave-17]
	_ = x[BoneweaveBoots-18]
	_ = x[Bracers-19]
	_ = x[BrambleMitts-20]
	_ = x[BreastPlate-21]
	_ = x[Cap-22]
	_ = x[CarnageHelm-23]
	_ = x[Casque-24]
	_ = x[ChainBoots-25]
	_ = x[ChainMail-26]
	_ = x[ChaosArmor-27]
	_ = x[Circlet-28]
	_ = x[ColossusGirdle-29]
	_ = x[ConquerorCrown-30]
	_ = x[Corona-31]
	_ = x[Coronet-32]
	_ = x[Crown-33]
	_ = x[CrusaderGauntlets-34]
	_ = x[Cuirass-35]
	_ = x[DeathMask-36]
	_ = x[Demonhead-37]
	_ = x[DemonhideArmor-38]
	_ = x[DemonhideBoots-39]
	_ = x[DemonhideGloves-40]
	_ = x[DemonhideSash-41]
	_ = x[DestroyerHelm-42]
	_ = x[Diadem-43]
	_ = x[DiamondMail-44]
	_ = x[DreamSpirit-45]
	_ = x[DuskShroud-46]
	_ = x[EarthSpirit-47]
	_ = x[EmbossedPlate-48]
	_ = x[FalconMask-49]
	_ = x[FangedHelm-50]
	_ = x[FieldPlate-51]
	_ = x[FullHelm-52]
	_ = x[PlateMail-53]
	_ = x[FullPlateMail-54]
	_ = x[FuryVisor-55]
	_ = x[Gauntlets-56]
	_ = x[GhostArmor-57]
	_ = x[GiantConch-58]
	_ = x[Girdle-59]
	_ = x[Gloves-60]
	_ = x[GothicPlate-61]
	_ = x[GrandCrown-62]
	_ = x[GreatHauberk-63]
	_ = x[GreatHelm-64]
	_ = x[GriffonHeadress-65]
	_ = x[GrimHelm-66]
	_ = x[GuardianCrown-67]
	_ = x[HardLeatherArmor-68]
	_ = x[HawkHelm-69]
	_ = x[HeavyBelt-70]
	_ = x[HeavyBoots-71]
	_ = x[HeavyBracers-72]
	_ = x[HeavyGloves-73]
	_ = x[HellforgedPlate-74]
	_ = x[Helm-75]
	_ = x[HornedHelm-76]
	_ = x[HuntersGuise-77]
	_ = x[Hydraskull-78]
	_ = x[Hyperion-79]
	_ = x[JawboneCap-80]
	_ = x[JawboneVisor-81]
	_ = x[KrakenShell-82]
	_ = x[LacqueredPlate-83]
	_ = x[LeatherArmor-84]
	_ = x[LeatherBoots-85]
	_ = x[LightBelt-86]
	_ = x[LightGauntlets-87]
	_ = x[LightPlate-88]
	_ = x[LightPlatedBoots-89]
	_ = x[LinkedMail-90]
	_ = x[LionHelm-91]
	_ = x[LoricatedMail-92]
	_ = x[MagePlate-93]
	_ = x[Mask-94]
	_ = x[MeshArmor-95]
	_ = x[MeshBelt-96]
	_ = x[MeshBoots-97]
	_ = x[MirroredBoots-98]
	_ = x[MithrilCoil-99]
	_ = x[MyrmidonGreaves-100]
	_ = x[OgreGauntlets-101]
	_ = x[OrnatePlate-102]
	_ = x[PlateBoots-103]
	_ = x[QuiltedArmor-104]
	_ = x[RageMask-105]
	_ = x[RingMail-106]
	_ = x[RussetArmor-107]
	_ = x[SacredArmor-108]
	_ = x[SacredFeathers-109]
	_ = x[Sallet-110]
	_ = x[Sash-111]
	_ = x[SavageHelmet-112]
	_ = x[ScaleMail-113]
	_ = x[ScarabHusk-114]
	_ = x[ScarabshellBoots-115]
	_ = x[SerpentskinArmor-116]
	_ = x[ShadowPlate-117]
	_ = x[Shako-118]
	_ = x[SharkskinBelt-119]
	_ = x[SharkskinBoots-120]
	_ = x[SharkskinGloves-121]
	_ = x[SharktoothArmor-122]
	_ = x[SkullCap-123]
	_ = x[SkySpirit-124]
	_ = x[SlayerGuard-125]
	_ = x[SpiderwebSash-126]
	_ = x[SpiredHelm-127]
	_ = x[SpiritMask-128]
	_ = x[SplintMail-129]
	_ = x[StuddedLeather-130]
	_ = x[SunSpirit-131]
	_ = x[TemplarCoat-132]
	_ = x[Tiara-133]
	_ = x[TigulatedMail-134]
	_ = x[TotemicMask-135]
	_ = x[TrellisedArmor-136]
	_ = x[TrollBelt-137]
	_ = x[Vambraces-138]
	_ = x[VampireboneGloves-139]
	_ = x[VampirefangBelt-140]
	_ = x[WarBelt-141]
	_ = x[WarBoots-142]
	_ = x[WarGauntlets-143]
	_ = x[WarHat-144]
	_ = x[WingedHelm-145]
	_ = x[WireFleece-146]
	_ = x[WolfHead-147]
	_ = x[Wyrmhide-148]
	_ = x[WyrmhideBoots-149]
	_ = x[Amethyst-150]
	_ = x[AmnRune-151]
	_ = x[Amulet-152]
	_ = x[AntidotePotion-153]
	_ = x[Arrows-154]
	_ = x[BaalsEye-155]
	_ = x[BarkScroll-156]
	_ = x[BerRune-157]
	_ = x[Bolts-158]
	_ = x[BookofSkill-159]
	_ = x[BurningEssenceofTerror-160]
	_ = x[ChamRune-161]
	_ = x[ChargedEssenceofHatred-162]
	_ = x[GrandCharm-163]
	_ = x[LargeCharm-164]
	_ = x[SmallCharm-165]
	_ = x[ChippedAmethyst-166]
	_ = x[ChippedDiamond-167]
	_ = x[ChippedEmerald-168]
	_ = x[ChippedRuby-169]
	_ = x[ChippedSapphire-170]
	_ = x[ChippedSkull-171]
	_ = x[ChippedTopaz-172]
	_ = x[DecipheredBarkScroll-173]
	_ = x[DiablosHorn-174]
	_ = x[Diamond-175]
	_ = x[DolRune-176]
	_ = x[ElRune-177]
	_ = x[EldRune-178]
	_ = x[Elixir-179]
	_ = x[Emerald-180]
	_ = x[EthRune-181]
	_ = x[FalRune-182]
	_ = x[FesteringEssenceofDestruction-183]
	_ = x[FlawedAmethyst-184]
	_ = x[FlawedDiamond-185]
	_ = x[FlawedEmerald-186]
	_ = x[FlawedRuby-187]
	_ = x[FlawedSapphire-188]
	_ = x[FlawedSkull-189]
	_ = x[FlawedTopaz-190]
	_ = x[FlawlessAmethyst-191]
	_ = x[FlawlessDiamond-192]
	_ = x[FlawlessEmerald-193]
	_ = x[FlawlessRuby-194]
	_ = x[FlawlessSapphire-195]
	_ = x[FlawlessSkull-196]
	_ = x[FlawlessTopaz-197]
	_ = x[FullHealingPotion-198]
	_ = x[FullManaPotion-199]
	_ = x[FullRejuvenationPotion-200]
	_ = x[Gold-201]
	_ = x[GoldBird-202]
	_ = x[GreaterHealingPotion-203]
	_ = x[GreaterManaPotion-204]
	_ = x[GulRune-205]
	_ = x[HealingPotion-206]
	_ = x[HealingPotionMid-207]
	_ = x[HelRune-208]
	_ = x[Herb-209]
	_ = x[HoradricCube-210]
	_ = x[IdentifyBook-211]
	_ = x[IdentifyScroll-212]
	_ = x[IoRune-213]
	_ = x[IstRune-214]
	_ = x[IthRune-215]
	_ = x[JadeFigurine-216]
	_ = x[JahRune-217]
	_ = x[Jewel-218]
	_ = x[KeyofDestruction-219]
	_ = x[KeyofHate-220]
	_ = x[KeyofTerror-221]
	_ = x[KhalimsBrain-222]
	_ = x[KhalimsEye-223]
	_ = x[KhalimsHeart-224]
	_ = x[KoRune-225]
	_ = x[LamEsensTome-226]
	_ = x[LargeBluePotion-227]
	_ = x[LargeRedPotion-228]
	_ = x[LemRune-229]
	_ = x[LesserHealingPotion-230]
	_ = x[LesserManaPotion-231]
	_ = x[LightHealingPotion-232]
	_ = x[LightManaPotion-233]
	_ = x[LoRune-234]
	_ = x[LumRune-235]
	_ = x[Maguffin-236]
	_ = x[MalRune-237]
	_ = x[ManaPotion-238]
	_ = x[ManaPotionMid-239]
	_ = x[MephistosBrain-240]
	_ = x[MephistoKey-241]
	_ = x[MephistoSoulStone-242]
	_ = x[NefRune-243]
	_ = x[OhmRune-244]
	_ = x[OrtRune-245]
	_ = x[PerfectAmethyst-246]
	_ = x[PerfectDiamond-247]
	_ = x[PerfectEmerald-248]
	_ = x[PerfectRuby-249]
	_ = x[PerfectSapphire-250]
	_ = x[PerfectSkull-251]
	_ = x[PerfectTopaz-252]
	_ = x[PlayerEar-253]
	_ = x[PulRune-254]
	_ = x[RalRune-255]
	_ = x[RejuvenationPotion-256]
	_ = x[Ring-257]
	_ = x[Ruby-258]
	_ = x[Sapphire-259]
	_ = x[Scroll-260]
	_ = x[ScrollofHoradric-261]
	_ = x[ScrollofMalah-262]
	_ = x[PotionofLife-263]
	_ = x[ShaelRune-264]
	_ = x[SkeletonKey-265]
	_ = x[Skull-266]
	_ = x[SmallBluePotion-267]
	_ = x[SmallRedPotion-268]
	_ = x[SolRune-269]
	_ = x[StaminaPotion-270]
	_ = x[StandardofHeroes-271]
	_ = x[StrongHealingPotion-272]
	_ = x[StrongManaPotion-273]
	_ = x[SurRune-274]
	_ = x[TalRune-275]
	_ = x[ThawingPotion-276]
	_ = x[ThulRune-277]
	_ = x[TirRune-278]
	_ = x[TokenofAbsolution-279]
	_ = x[Topaz-280]
	_ = x[Torch-281]
	_ = x[TownPortalBook-282]
	_ = x[TownPortalScroll-283]
	_ = x[TwistedEssenceofSuffering-284]
	_ = x[UmRune-285]
	_ = x[VexRune-286]
	_ = x[ViperAmulet-287]
	_ = x[ZodRune-288]
	_ = x[Aegis-289]
	_ = x[AerinShield-290]
	_ = x[AkaranRondache-291]
	_ = x[AkaranTarge-292]
	_ = x[KurastShield-293]
	_ = x[AncientShield-294]
	_ = x[BarbedShield-295]
	_ = x[BladeBarrier-296]
	_ = x[BloodlordSkull-297]
	_ = x[BoneShield-298]
	_ = x[Buckler-299]
	_ = x[CantorTrophy-300]
	_ = x[CrownShield-301]
	_ = x[Defender-302]
	_ = x[DemonHead-303]
	_ = x[DragonShield-304]
	_ = x[FetishTrophy-305]
	_ = x[GargoyleHead-306]
	_ = x[GothicShield-307]
	_ = x[GrimShield-308]
	_ = x[GildedShield-309]
	_ = x[HeirophantTrophy-310]
	_ = x[Heater-311]
	_ = x[HellspawnSkull-312]
	_ = x[HeraldicShield-313]
	_ = x[KiteShield-314]
	_ = x[LargeShield-315]
	_ = x[Luna-316]
	_ = x[MinionSkull-317]
	_ = x[Monarch-318]
	_ = x[MummifiedTrophy-319]
	_ = x[OverseerSkull-320]
	_ = x[Pavise-321]
	_ = x[PreservedHead-322]
	_ = x[ProtectorShield-323]
	_ = x[Rondache-324]
	_ = x[RoundShield-325]
	_ = x[RoyalShield-326]
	_ = x[SacredRondache-327]
	_ = x[SacredTarge-328]
	_ = x[Scutum-329]
	_ = x[SextonTrophy-330]
	_ = x[SmallShield-331]
	_ = x[SpikedShield-332]
	_ = x[SuccubusSkull-333]
	_ = x[Targe-334]
	_ = x[TowerShield-335]
	_ = x[TrollNest-336]
	_ = x[UnravellerHead-337]
	_ = x[VortexShield-338]
	_ = x[Ward-339]
	_ = x[ZakarumShield-340]
	_ = x[ZombieHead-341]
	_ = x[AncientAxe-342]
	_ = x[AncientSword-343]
	_ = x[Arbalest-344]
	_ = x[ArchonStaff-345]
	_ = x[AshwoodBow-346]
	_ = x[Ataghan-347]
	_ = x[Axe-348]
	_ = x[BalancedAxe-349]
	_ = x[BalancedKnife-350]
	_ = x[Balista-351]
	_ = x[BalrogBlade-352]
	_ = x[BalrogSpear-353]
	_ = x[BarbedClub-354]
	_ = x[Bardiche-355]
	_ = x[BastardSword-356]
	_ = x[BattleAxe-357]
	_ = x[BattleCestus-358]
	_ = x[BattleDart-359]
	_ = x[BattleHammer-360]
	_ = x[BattleScythe-361]
	_ = x[BattleStaff-362]
	_ = x[BattleSword-363]
	_ = x[BeardedAxe-364]
	_ = x[BecDeCorbin-365]
	_ = x[BerserkerAxe-366]
	_ = x[Bill-367]
	_ = x[Blade-368]
	_ = x[BladeBow-369]
	_ = x[BladeTalons-370]
	_ = x[BoneKnife-371]
	_ = x[BoneWand-372]
	_ = x[Brandistock-373]
	_ = x[BroadAxe-374]
	_ = x[BroadSword-375]
	_ = x[BurntWand-376]
	_ = x[Caduceus-377]
	_ = x[CedarBow-378]
	_ = x[CedarStaff-379]
	_ = x[CeremonialBow-380]
	_ = x[CeremonialJavelin-381]
	_ = x[CeremonialPike-382]
	_ = x[CeremonialSpear-383]
	_ = x[Cestus-384]
	_ = x[ChampionAxe-385]
	_ = x[ChampionSword-386]
	_ = x[ChokingGasPotion-387]
	_ = x[ChuKoNu-388]
	_ = x[Cinquedeas-389]
	_ = x[ClaspedOrb-390]
	_ = x[Claws-391]
	_ = x[Claymore-392]
	_ = x[Cleaver-393]
	_ = x[CloudySphere-394]
	_ = x[Club-395]
	_ = x[ColossalSword-396]
	_ = x[ColossalBlade-397]
	_ = x[ColossusCrossbow-398]
	_ = x[ColossusVoulge-399]
	_ = x[CompositeBow-400]
	_ = x[ConquestSword-401]
	_ = x[Crossbow-402]
	_ = x[Crowbill-403]
	_ = x[CrusaderBow-404]
	_ = x[CrypticAxe-405]
	_ = x[CrypticSword-406]
	_ = x[CrystalSword-407]
	_ = x[CrystallineGlobe-408]
	_ = x[Cudgel-409]
	_ = x[Cutlass-410]
	_ = x[DacianFalx-411]
	_ = x[Dagger-412]
	_ = x[Decapitator-413]
	_ = x[DecoyDagger-414]
	_ = x[DemonCrossbow-415]
	_ = x[DemonHeart-416]
	_ = x[DevilStar-417]
	_ = x[DiamondBow-418]
	_ = x[DimensionalBlade-419]
	_ = x[DimensionalShard-420]
	_ = x[Dirk-421]
	_ = x[DivineScepter-422]
	_ = x[DoubleAxe-423]
	_ = x[DoubleBow-424]
	_ = x[DragonStone-425]
	_ = x[EableOrb-426]
	_ = x[EdgeBow-427]
	_ = x[ElderStaff-428]
	_ = x[EldritchOrb-429]
	_ = x[ElegantBlade-430]
	_ = x[Espadon-431]
	_ = x[EttinAxe-432]
	_ = x[ExecutionerSword-433]
	_ = x[ExplodingPotion-434]
	_ = x[Falcata-435]
	_ = x[Falchion-436]
	_ = x[FangedKnife-437]
	_ = x[Fascia-438]
	_ = x[FeralAxe-439]
	_ = x[FeralClaws-440]
	_ = x[Flail-441]
	_ = x[Flamberge-442]
	_ = x[FlangedMace-443]
	_ = x[FlyingAxe-444]
	_ = x[FlyingKnife-445]
	_ = x[Francisca-446]
	_ = x[FulmatingPotion-447]
	_ = x[Fuscina-448]
	_ = x[GhostGlaive-449]
	_ = x[GhostSpear-450]
	_ = x[GhostWand-451]
	_ = x[GiantAxe-452]
	_ = x[GiantSword-453]
	_ = x[GiantThresher-454]
	_ = x[Gidbinn-455]
	_ = x[Gladius-456]
	_ = x[Glaive-457]
	_ = x[GloriousAxe-458]
	_ = x[GlowingOrb-459]
	_ = x[GnarledStaff-460]
	_ = x[GorgonCrossbow-461]
	_ = x[GothicAxe-462]
	_ = x[GothicBow-463]
	_ = x[GothicStaff-464]
	_ = x[GothicSword-465]
	_ = x[GrandMatronBow-466]
	_ = x[GrandScepter-467]
	_ = x[GraveWand-468]
	_ = x[GreatAxe-469]
	_ = x[GreatBow-470]
	_ = x[GreatMaul-471]
	_ = x[GreatPilum-472]
	_ = x[GreatPoleaxe-473]
	_ = x[GreatSword-474]
	_ = x[GreaterClaws-475]
	_ = x[GreaterTalons-476]
	_ = x[GrimScythe-477]
	_ = x[GrimWand-478]
	_ = x[Halberd-479]
	_ = x[HandAxe-480]
	_ = x[HandScythe-481]
	_ = x[Harpoon-482]
	_ = x[Hatchet-483]
	_ = x[HatchetHands-484]
	_ = x[HeavenlyStone-485]
	_ = x[HeavyCrossbow-486]
	_ = x[HellforgeHammer-487]
	_ = x[HighlandBlade-488]
	_ = x[HolyWaterSprinkler-489]
	_ = x[HoradricMalus-490]
	_ = x[HoradricStaff-491]
	_ = x[HuntersBow-492]
	_ = x[Hurlbat-493]
	_ = x[HydraBow-494]
	_ = x[HydraEdge-495]
	_ = x[HyperionJavelin-496]
	_ = x[HyperionSpear-497]
	_ = x[JaggedStar-498]
	_ = x[Javelin-499]
	_ = x[JoStaff-500]
	_ = x[Katar-501]
	_ = x[KhalimFlail-502]
	_ = x[Knout-503]
	_ = x[Kriss-504]
	_ = x[Lance-505]
	_ = x[LargeAxe-506]
	_ = x[LegendSpike-507]
	_ = x[LegendSword-508]
	_ = x[LegendaryMallet-509]
	_ = x[LichWand-510]
	_ = x[LightCrossbow-511]
	_ = x[LochaberAxe-512]
	_ = x[LongBattleBow-513]
	_ = x[LongBow-514]
	_ = x[LongSiegeBow-515]
	_ = x[LongStaff-516]
	_ = x[LongSword-517]
	_ = x[LongWarBow-518]
	_ = x[Mace-519]
	_ = x[MaidenJavelin-520]
	_ = x[MaidenPike-521]
	_ = x[MaidenSpear-522]
	_ = x[Mancatcher-523]
	_ = x[MarteldeFer-524]
	_ = x[MatriarchalBow-525]
	_ = x[MatriarchalPike-526]
	_ = x[MatriarchalSpear-527]
	_ = x[MatriarchalJavelin-528]
	_ = x[Maul-529]
	_ = x[MightyScepter-530]
	_ = x[MilitaryAxe-531]
	_ = x[MilitaryPick-532]
	_ = x[MithralPoint-533]
	_ = x[MorningStar-534]
	_ = x[MythicalSword-535]
	_ = x[Naga-536]
	_ = x[OgreAxe-537]
	_ = x[OgreMaul-538]
	_ = x[OilPotion-539]
	_ = x[Partizan-540]
	_ = x[PelletBow-541]
	_ = x[PetrifiedWand-542]
	_ = x[PhaseBlade-543]
	_ = x[Pike-544]
	_ = x[Pilum-545]
	_ = x[Poignard-546]
	_ = x[Poleaxe-547]
	_ = x[PolishedWand-548]
	_ = x[QuarterStaff-549]
	_ = x[Quhab-550]
	_ = x[RancidGasPotion-551]
	_ = x[RazorBow-552]
	_ = x[ReflexBow-553]
	_ = x[ReinforcedMace-554]
	_ = x[RepeatingCrossbow-555]
	_ = x[Rondel-556]
	_ = x[RuneBow-557]
	_ = x[RuneScepter-558]
	_ = x[RuneStaff-559]
	_ = x[RuneSword-560]
	_ = x[RunicTalons-561]
	_ = x[Sabre-562]
	_ = x[SacredGlobe-563]
	_ = x[Scepter-564]
	_ = x[Scimitar-565]
	_ = x[ScissorsKatar-566]
	_ = x[ScissorsQuhab-567]
	_ = x[ScissorsSuwayyah-568]
	_ = x[Scourge-569]
	_ = x[Scythe-570]
	_ = x[SeraphRod-571]
	_ = x[ShadowBow-572]
	_ = x[Shamshir-573]
	_ = x[Shillelah-574]
	_ = x[ShortBattleBow-575]
	_ = x[ShortBow-576]
	_ = x[ShortSiegeBow-577]
	_ = x[ShortSpear-578]
	_ = x[ShortStaff-579]
	_ = x[ShortSword-580]
	_ = x[ShortWarBow-581]
	_ = x[SiegeCrossbow-582]
	_ = x[SilverEdgedAxe-583]
	_ = x[Simbilan-584]
	_ = x[SmallCrescent-585]
	_ = x[SmokedSphere-586]
	_ = x[SparklingBall-587]
	_ = x[Spear-588]
	_ = x[Spetum-589]
	_ = x[Spiculum-590]
	_ = x[SpiderBow-591]
	_ = x[SpikedClub-592]
	_ = x[StaffOfTheKings-593]
	_ = x[StagBow-594]
	_ = x[Stalagmite-595]
	_ = x[Stilleto-596]
	_ = x[StranglingGasPotion-597]
	_ = x[StygianPike-598]
	_ = x[StygianPilum-599]
	_ = x[SuperKhalimFlail-600]
	_ = x[Suwayyah-601]
	_ = x[SwirlingCrystal-602]
	_ = x[Tabar-603]
	_ = x[Thresher-604]
	_ = x[ThrowingAxe-605]
	_ = x[ThrowingKnife-606]
	_ = x[ThrowingSpear-607]
	_ = x[ThunderMaul-608]
	_ = x[Tomahawk-609]
	_ = x[TombWand-610]
	_ = x[Trident-611]
	_ = x[Truncheon-612]
	_ = x[Tulwar-613]
	_ = x[TuskSword-614]
	_ = x[TwinAxe-615]
	_ = x[TwoHandedSword-616]
	_ = x[TyrantClub-617]
	_ = x[UnearthedWand-618]
	_ = x[VortexOrb-619]
	_ = x[Voulge-620]
	_ = x[WalkingStick-621]
	_ = x[Wand-622]
	_ = x[WarAxe-623]
	_ = x[WarClub-624]
	_ = x[WarDart-625]
	_ = x[WarFist-626]
	_ = x[WarFork-627]
	_ = x[WarHammer-628]
	_ = x[WarJavelin-629]
	_ = x[WarPike-630]
	_ = x[WarScepter-631]
	_ = x[WarScythe-632]
	_ = x[WarSpear-633]
	_ = x[WarSpike-634]
	_ = x[WarStaff-635]
	_ = x[WarSword-636]
	_ = x[WardBow-637]
	_ = x[WingedAxe-638]
	_ = x[WingedHarpoon-639]
	_ = x[WingedKnife-640]
	_ = x[WirtsLeg-641]
	_ = x[WristBlade-642]
	_ = x[WristSpike-643]
	_ = x[WristSword-644]
	_ = x[Yari-645]
	_ = x[YewWand-646]
	_ = x[Zweihander-647]
}

const _ItemCode_name = "ItemCodeNotFounddr6aardr3utpulmba4ba5uplxhlztbxtbxtgmbldrbbhmuh9uhnumbmglulgbrscapbabxlmmbtchnxulci0uhcbaeurnci1crnutgxrsxskuskxlaxlbxlgzlbbadci3ungdrfuuidrdxthdr4ba2fldfhlpltfulbachglxuiuhlhbllglgthxrnursghmdr7xh9bafhladr2tblvbtxmgvglulthlmba3dr8ukpurgba1ba6ulduthlealbtvbltglltptbtxngba7uclxtpmskxhnzmbxmbutbumcuhbuhgxarhbtquiba8rngxpluardr9xkplblba9sclulauvbxeauuluapzvbxvbxvgxldskpdrebaaulcuhmdr5splstudrcxltci2xcldraxtuutcumguvguvczhbxhbxhgxapxhmutudr1ueaulbgsvr11amuypsaqvbeybksr30cqvassbetr32cehcm3cm2cm1gcvgcwgcggcrgcbskcgcybkddhngswr14r01r02elxgsgr05r19fedgfvgfwgfggfrgfbskfgfygzvglwglgglrglbsklglyhpfmpfrvlgldg34hp5mp5r25hp3hpor15hrbboxibkiscr16r24r06j34r31jewpk3pk2pk1qbrqeyqhrr18bbbbplrplr20hp1mp1hp2mp2r28r17icer23mp3mpombrluvmssr04r27r09gpvgpwgpggprgpbskzgpyearr21r08rvsringsrgsb0sctr1tr2xyzr13keyskubpsrpsr12vpsstdhp4mp4r29r07wmsr10r03toagsytchtbktsctesr22r26vipr33uowpa4pa7pa6padxtsxpkupknefbshbucne9pa5xucne5xitne7ne4gtsxshpa9neauucnegpa3kitlrgumlnebuitne6nedxowne1pa8pa2xmlpaapacpabxrgne8smlspkneepa1towushne3pafutspaene29gi9wd8lx6wsam67smaxebalbkf8hx7gs7s79spbarbswbtx7cs9tk9wh9s8bst9bs9ba9h97wa9vobld6hbbtl7dgbwnbrnbaxbsd9wn7ws8lb8csam7amaam9am8ces7ga7b7gpm8rx9krob4clwclm9axob8clb7fb7gd6hx7vocbw7bsmxb9mp6l77pa7lscrsob79cl9sm9cmdgr7btd336rxobd7mt6s79crobfdir9ws2ax8cbob5ob18sb6csobc7sb92h72a9gdopm7ssflc7kr9xf7la7lwflaflb9ma7ta7tk9taopl9tr7gl7st7ywgixgis7wcg339ssglv7giob6cst6mx9ga8lw8bs9b9amcgsc9gwgax6cbgma9pi7h7gsd9lw9tw9wcgwnhalhax9cs9ts9haaxfobbhxbhfh7cm9qshdmhsthbw9b86lw7fc7ja7sr9mtjav8ssktrqf19flkri9p9lax7bl72h7wh7bwlxb9b7lbblbw8l8lstlsdlwbmacam5am4am37br9gmambameamdamfmau7sc9lampi7dimst7wd9wa7o77m7ops9pa6lx9yw7crpikpil9dgpax7wn8ls9argps8hbam27marxb9di8sw9sc8ws9ls7twsbrob2scpscmskr9qr7qr7flscy7qs6lb9sb6bssbbsbw8s8sspsstssdswb8mx7ba9s97axob3ob9sprspt9gl6sbspcmsfam16ls9blgpl7tr7piqf27aroba9bt7s8taxtkftsp7gm7ha9bwtri7cl9fc9gs92a2hs7sp7gwobevou6sswndwax9m99bk7xf9brwhm9ja7p7wspwsc9sr7mpwstwsd6sw7b87ts7bklegwrb9wb7wb9stywn9fb"

var _ItemCode_index = [...]uint16{0, 16, 19, 22, 25, 28, 31, 34, 37, 40, 43, 46, 49, 52, 55, 58, 61, 64, 67, 70, 73, 76, 79, 82, 85, 88, 91, 94, 97, 100, 103, 106, 109, 112, 115, 118, 121, 124, 127, 130, 133, 136, 139, 142, 145, 148, 151, 154, 157, 160, 163, 166, 169, 172, 175, 178, 181, 184, 187, 190, 193, 196, 199, 202, 205, 208, 211, 214, 217, 220, 223, 226, 229, 232, 235, 238, 241, 244, 247, 250, 253, 256, 259, 262, 265, 268, 271, 274, 277, 280, 283, 286, 289, 292, 295, 298, 301, 304, 307, 310, 313, 316, 319, 322, 325, 328, 331, 334, 337, 340, 343, 346, 349, 352, 355, 358, 361, 364, 367, 370, 373, 376, 379, 382, 385, 388, 391, 394, 397, 400, 403, 406, 409, 412, 415, 418, 421, 424, 427, 430, 433, 436, 439, 442, 445, 448, 451, 454, 457, 460, 463, 466, 469, 472, 475, 478, 481, 484, 487, 490, 493, 496, 499, 502, 505, 508, 511, 514, 517, 520, 523, 526, 529, 532, 535, 538, 541, 544, 547, 550, 553, 556, 559, 562, 565, 568, 571, 574, 577, 580, 583, 586, 589, 592, 595, 598, 601, 604, 607, 610, 613, 616, 619, 622, 625, 628, 631, 634, 637, 640, 643, 646, 649, 652, 655, 658, 661, 664, 667, 670, 673, 676, 679, 682, 685, 688, 691, 694, 697, 700, 703, 706, 709, 712, 715, 718, 721, 724, 727, 730, 733, 736, 739, 742, 745, 748, 751, 754, 757, 760, 763, 766, 769, 772, 775, 778, 781, 784, 787, 790, 793, 796, 799, 802, 805, 808, 811, 814, 817, 820, 823, 826, 829, 832, 835, 838, 841, 844, 847, 850, 853, 856, 859, 862, 865, 868, 871, 874, 877, 880, 883, 886, 889, 892, 895, 898, 901, 904, 907, 910, 913, 916, 919, 922, 925, 928, 931, 934, 937, 940, 943, 946, 949, 952, 955, 958, 961, 964, 967, 970, 973, 976, 979, 982, 985, 988, 991, 994, 997, 1000, 1003, 1006, 1009, 1012, 1015, 1018, 1021, 1024, 1027, 1030, 1033, 1036, 1039, 1042, 1045, 1048, 1051, 1054, 1057, 1060, 1063, 1066, 1069, 1072, 1075, 1078, 1081, 1084, 1087, 1090, 1093, 1096, 1099, 1102, 1105, 1108, 1111, 1114, 1117, 1120, 1123, 1126, 1129, 1132, 1135, 1138, 1141, 1144, 1147, 1150, 1153, 1156, 1159, 1162, 1165, 1168, 1171, 1174, 1177, 1180, 1183, 1186, 1189, 1192, 1195, 1198, 1201, 1204, 1207, 1210, 1213, 1216, 1219, 1222, 1225, 1228, 1231, 1234, 1237, 1240, 1243, 1246, 1249, 1252, 1255, 1258, 1261, 1264, 1267, 1270, 1273, 1276, 1279, 1282, 1285, 1288, 1291, 1294, 1297, 1300, 1303, 1306, 1309, 1312, 1315, 1318, 1321, 1324, 1327, 1330, 1333, 1336, 1339, 1342, 1345, 1348, 1351, 1354, 1357, 1360, 1363, 1366, 1369, 1372, 1375, 1378, 1381, 1384, 1387, 1390, 1393, 1396, 1399, 1402, 1405, 1408, 1411, 1414, 1417, 1420, 1423, 1426, 1429, 1432, 1435, 1438, 1441, 1444, 1447, 1450, 1453, 1456, 1459, 1462, 1465, 1468, 1471, 1474, 1477, 1480, 1483, 1486, 1489, 1492, 1495, 1498, 1501, 1504, 1507, 1510, 1513, 1516, 1519, 1522, 1525, 1528, 1531, 1534, 1537, 1540, 1543, 1546, 1549, 1552, 1555, 1558, 1561, 1564, 1567, 1570, 1573, 1576, 1579, 1582, 1585, 1588, 1591, 1594, 1597, 1600, 1603, 1606, 1609, 1612, 1615, 1618, 1621, 1624, 1627, 1630, 1633, 1636, 1639, 1642, 1645, 1648, 1651, 1654, 1657, 1660, 1663, 1666, 1669, 1672, 1675, 1678, 1681, 1684, 1687, 1690, 1693, 1696, 1699, 1702, 1705, 1708, 1711, 1714, 1717, 1720, 1723, 1726, 1729, 1732, 1735, 1738, 1741, 1744, 1747, 1750, 1753, 1756, 1759, 1762, 1765, 1768, 1771, 1774, 1777, 1780, 1783, 1786, 1789, 1792, 1795, 1798, 1801, 1804, 1807, 1810, 1813, 1816, 1819, 1822, 1825, 1828, 1831, 1834, 1837, 1840, 1843, 1846, 1849, 1852, 1855, 1858, 1861, 1864, 1867, 1870, 1873, 1876, 1879, 1882, 1885, 1888, 1891, 1894, 1897, 1900, 1903, 1906, 1909, 1912, 1915, 1918, 1921, 1924, 1927, 1930, 1933, 1936, 1939, 1942, 1945, 1948, 1951, 1954, 1957}

func (i ItemCode) String() string {
	if i >= ItemCode(len(_ItemCode_index)-1) {
		return "ItemCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ItemCode_name[_ItemCode_index[i]:_ItemCode_index[i+1]]
}
